name: MODS (new approach to build bluefin)
on:
  workflow_dispatch:
  push:
    paths:
      - 'mods/**.*'
      - '.github/workflows/mods.yml'
  schedule:
    - cron: '0 7 * * *'  # At 07:00 AM UTC everyday => 1AM MST
              
env:
  token: ${{ secrets.PAT_TOKEN_OCT_2025 }}
  
jobs:
  update-and-trigger-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout dx4homelab/bluefin main
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.PAT_TOKEN_OCT_2025 }}

      - name: Configuring git user.name & user.email
        run: |
          echo "=== git config ${GITHUB_ACTOR}@users.noreply.github.com ===="
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Set default BLUEFIN_UPDATED to true
        run: |
          echo "set dafault BLUEFIN_UPDATED=true"
          echo "BLUEFIN_UPDATED=true" >> "$GITHUB_ENV"
  
      - name: refresh ublue-os/bluefin
        if: ${{ env.BLUEFIN_UPDATED == 'true' }}
        run: |
          echo "=== upstream bluefin cleanup: folders ==="
          find . -maxdepth 1 -type d -not -path '.' | grep -vE '^\.$|^\./mods|^\./\.git$|^\./\.github$' | xargs -n1 rm -rf
          echo "=== git status after cleanup ==="
          git status
          echo "=== cloning upstream bluefin to mods/upstream ==="
          git clone -b main https://github.com/ublue-os/bluefin.git mods/upstream
          ls -lt mods
          ls -lt mods/upstream
          echo "=== replacing all bluefin files from fresh copy in mods/upstream ==="
          rsync -av --progress mods/upstream/ ./ --exclude .git
          rm -rf mods/upstream
          echo "=== git status after replacment ==="
          git status

      - name: Update custom actions, cosign.pub, README.md
        run: |
          echo "=== copy cosign.pub file from dx4homelab-mods ==="
          rm -f .github/workflows/build-*.yml
          cp mods/build-dx4homelab-bluefin-dx-gts.yml .github/workflows
          cp mods/build-dx4homelab-bluefin-dx-latest.yml .github/workflows
          cp mods/build-dx4homelab-bluefin-dx-stable.yml .github/workflows
          cp mods/cosign.pub cosign.pub
          cp mods/README.md README.md
          cp -v mods/02-enable-chrome-yum-repo.sh build_files/dx
          git apply mods/build-dx-sh.patch
          git diff build_files/shared/build-dx.sh
          git add .
          echo "=== confirming main branch status after mods ==="
          git status

      - name: Update packages.json
        run: |
          echo "=== updating: packages.json, reusable-build.yml ==="
          cat packages.json
          #
          # updating packages.json
          export ADD_PACKAGES="mods/add-packages.json"
          yq eval -v -i --from-file mods/yq-mods4package-json.yq packages.json
          #
      - name: Update reusable-build.yml
        run: |
          # updating reusable-build.yml
          yq eval -v -i --from-file mods/yq-mods4reusable-build-yaml.yq .github/workflows/reusable-build.yml
          #
      - name: Commit modifications to reusable-build.yml and packages.json
        run: |
          echo "=== diffs to reusable-build.yml and packages.json ==="
          git diff .github/workflows/reusable-build.yml
          git diff packages.json

          echo "=== Commit modifications to reusable-build.yml and packages.json ==="
          git add .
          git status

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: 'chore: automated customization of upstream bluefin/dx build workflow files'
          committer_name: "${GITHUB_ACTOR}"
          committer_email: "${GITHUB_ACTOR}@users.noreply.github.com"
          add: .
      
      - name: Sleep for 10 seconds while above commit is effective
        shell: bash
        run: sleep 10s
    
      - name: Start build-latest-bluefin workflow
        if: ${{ env.BLUEFIN_UPDATED == 'true' }}
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN_OCT_2025 }}        
        run: |
          gh workflow run build-dx4homelab-bluefin-dx-latest.yml --ref main
          gh workflow run build-dx4homelab-bluefin-dx-gts.yml --ref main
        
        #
        # upstream project seems removed "stable" target
        # gh workflow run build-dx4homelab-bluefin-dx-stable.yml --ref main
        #
